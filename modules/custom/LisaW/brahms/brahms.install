<?php
/**
 * @file
 * Install file for GBIF Vocabularies module.
 */

/**
 * Implements hook_install().
 * Creates BRAHMS bundles, fields and field instances.
 */
function brahms_install() {
  /**module_load_include('inc', 'brahms', 'includes/brahms.helper');
  $bundles = _brahms_installed_bundles();
  $fields = _brahms_installed_fields();
  $instances = _brahms_installed_instances();
  foreach ($fields as $field) {
    field_create_field($field);
  }
  foreach ($bundles as $entity => $bundle) {
    foreach ($bundle as $machine_name => $info) {
      if ($entity == 'taxonomy_term') {
        taxonomy_vocabulary_save((object) $info);
      }
      $existing_instances = field_info_instances($entity, $machine_name);
      foreach ($instances as $field_name => $instance) {
        if (array_key_exists($field_name, $existing_instances)) continue;
        $instance['entity_type'] = $entity;
        $instance['bundle'] = $machine_name;
        field_create_instance($instance);
      }
      if (array_key_exists('url', $info)) {
        $source = feeds_source($machine_name);
        $source->addConfig(array(
          'FeedsHTTPFetcher' => array(
            'source' => $info['url'],
          ),
        ));
        $source->save();
      }
    }
  }*/
}
/**
 * Implements hook_uninstall().
 * Removes BRAHMS bundles, fields and field instances.
 */
function brahms_uninstall() {
  /**module_load_include('inc', 'brahms', 'includes/brahms.helper');
  $fields = _brahms_installed_fields();
  $bundles = _brahms_installed_bundles();

  foreach ($bundles as $entity => $bundles) {
    foreach (array_keys($bundles) as $machine_name) {
      $instances = field_info_instances($entity, $machine_name);
      foreach ($instances as $instance_name => $instance) {
        field_delete_instance($instance, FALSE);
      }
      if ($entity == 'taxonomy_term') {
        if ($vocabulary = taxonomy_vocabulary_machine_name_load($machine_name)) {
          taxonomy_vocabulary_delete($vocabulary->vid);
        }
      }
    }
  }
  foreach (array_keys($fields) as $field) {
    field_delete_field($field);
  }
  field_purge_batch(1000);**/
}